# Generated by Django 4.2.10 on 2025-05-24 04:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('customer_dashboard', '0035_userchatsummary_chatsessionsummary'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='assistantemailtoken',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='assistantemailtoken',
            name='last_used_at',
        ),
        migrations.RemoveField(
            model_name='assistantemailtoken',
            name='token',
        ),
        migrations.AddField(
            model_name='assistantemailtoken',
            name='auth_token',
            field=models.UUIDField(blank=True, default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name='assistantemailtoken',
            name='expires_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='assistantemailtoken',
            name='used',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='assistantemailtoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_auth_tokens', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='UserEmailSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PreAuthenticationMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('original_subject', models.CharField(blank=True, max_length=1024, null=True)),
                ('sender_email', models.EmailField(max_length=254)),
                ('in_reply_to_header', models.TextField(blank=True, null=True)),
                ('email_thread_id', models.CharField(blank=True, max_length=255, null=True)),
                ('openai_thread_context_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('auth_token', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pending_message_for_token', to='customer_dashboard.assistantemailtoken')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pre_auth_pending_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailAggregationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_identifier', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('recipient_email', models.EmailField(help_text="The original sender's email to reply to.", max_length=254)),
                ('user_email_token', models.CharField(help_text="The user's token from mj+<token>@sautai.com", max_length=255)),
                ('original_subject', models.CharField(blank=True, max_length=1024, null=True)),
                ('in_reply_to_header', models.TextField(blank=True, null=True)),
                ('email_thread_id', models.CharField(blank=True, help_text="e.g., Gmail's thread ID", max_length=255, null=True)),
                ('openai_thread_context_id_initial', models.CharField(blank=True, help_text='OpenAI thread ID if passed with the first email', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Set to False after Celery task processes it.')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_aggregation_sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AggregatedMessageContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='customer_dashboard.emailaggregationsession')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
    ]
