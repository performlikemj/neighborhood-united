# Generated by Django 4.2.10 on 2025-02-25 05:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(help_text="Font Awesome icon class (e.g., 'fa-trophy')", max_length=50)),
                ('points_reward', models.IntegerField(default=0)),
                ('points_threshold', models.IntegerField(blank=True, null=True)),
                ('streak_threshold', models.IntegerField(blank=True, null=True)),
                ('meals_planned_threshold', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(db_index=True, default=0)),
                ('level', models.IntegerField(default=1)),
                ('streak_count', models.IntegerField(default=0)),
                ('last_active_date', models.DateField(blank=True, null=True)),
                ('total_meals_planned', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gamification_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PointsTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('transaction_type', models.CharField(choices=[('earned', 'Earned'), ('spent', 'Spent')], max_length=10)),
                ('source', models.CharField(choices=[('streak', 'Streak Bonus'), ('achievement', 'Achievement'), ('meal_plan', 'Meal Planning'), ('login', 'Daily Login'), ('weekly_goal', 'Weekly Goal Completion'), ('other', 'Other')], max_length=20)),
                ('description', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='points_transactions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AnalyticsEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('login', 'Login'), ('achievement', 'Achievement Earned'), ('level_up', 'Level Up'), ('meal_planned', 'Meal Planned'), ('streak_update', 'Streak Updated'), ('goal_completed', 'Weekly Goal Completed')], max_length=50)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('additional_data', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_events', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_start_date', models.DateField()),
                ('target_days', models.IntegerField(default=7)),
                ('completed_days', models.IntegerField(default=0)),
                ('completed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'week_start_date')},
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achieved_at', models.DateTimeField(auto_now_add=True)),
                ('notified', models.BooleanField(default=False)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.achievement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'achievement'], name='gamificatio_user_id_4b2f15_idx')],
                'unique_together': {('user', 'achievement')},
            },
        ),
    ]
